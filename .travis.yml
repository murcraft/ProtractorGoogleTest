#language: node_js
#node_js:
#  - 10
#
#dist: trusty

#before_install:
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1080x16; fi
# - export DISPLAY=:99.0
#  - Xvfb :99 -screen 0 1920x1080x16 > /dev/null 2>&1 &
#
#before_script:
#  - chmod +x ./install-safari.sh ./run_tests.sh ./install.sh
#  - sh -e /etc/init.d/xvfb start &
#  - sleep 3
#  - bash ./install.sh
#  - if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then ( sudo Xvfb :99 -ac -screen 0 1920x1080x16; echo ok ) & fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sleep 3; fi
#  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Chrome" ]]; then export browser=chrome; fi
#  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Firefox" ]]; then export browser=firefox; fi
#  - if [[ "$TRAVIS_BUILD_STAGE_NAME" == "Safari" ]]; then export browser=safari; fi
#  - ls ~/Library
# - ls ~/Library/Logs
# - ls ~/Library/Containers
#  - ls ~/build/murcraft
#  - ls ~/build
#  - if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then bash ./install-safari.sh; fi

#stages:
#  - Chrome
#  - Firefox
#  - Safari

#script:
# - ls
# - system_profiler SPDisplaysDataType | grep Resolution
# - bash ./run_tests.sh || if [$? != 0]; then exit 0; fi

#jobs:
# include:
# - stage: Chrome
#   env: suite=suite1
# - stage: Chrome
#   env: suite=suite2
# - stage: Chrome
#   env: suite=pdf
# - stage: Firefox
#   env: suite=suite1
# - stage: Firefox
#   env: suite=suite2
# - stage: Firefox
#   env: suite=pdf

dist: trusty

services:
- docker

stages:
- Docker-build
- Chrome

script:
  - mkdir allure-results
  - ls
  - chmod -R a=rwx $(pwd)
  - echo "$DOCKER_USERNAME" |docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  - docker run -i -d --rm --net=host --privileged -v /dev/shm:/dev/shm -v $(pwd)/allure-results:/tests/allure-results -v $(pwd)/e2e/artifacts:/tests/e2e/artifacts -e suite=$suite -e maxinstances=$maxinstances -e logLevel=$logLevel --name e2e $DOCKER_USERNAME/e2e-chrome:latest
  - docker exec -it e2e bash -c 'xvfb-run -a node conf-flake.js || if [$? != 0]; then exit 0; fi'

jobs:
  include:
  - stage: Docker-build
    env: suite=null
    script:
    - echo "$DOCKER_USERNAME" |docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker build -t e2e-chrome .
    - docker images
    - docker tag e2e-chrome $DOCKER_USERNAME/e2e-chrome
    - docker push $DOCKER_USERNAME/e2e-chrome
  - stage: Chrome
    env: suite=suite1 browser="chrome"
    script:
    - mkdir allure-results
    - ls
    - chmod -R a=rwx $(pwd)
    - echo "$DOCKER_USERNAME" |docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker run -i -d --rm --net=host --privileged -v /dev/shm:/dev/shm -v $(pwd)/allure-results:/tests/allure-results -v $(pwd)/artifacts:/tests/artifacts -e suite=suite1 -e maxinstances=$maxinstances -e logLevel=$logLevel --name e2e $DOCKER_USERNAME/e2e-chrome:latest
    - docker exec -it e2e bash -c 'xvfb-run -a node conf-flake.js || if [$? != 0]; then exit 0; fi'
  - stage: Chrome
    env: suite=suite2 browser="chrome"
    script:
    - mkdir allure-results
    - ls
    - chmod -R a=rwx $(pwd)
    - echo "$DOCKER_USERNAME" |docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker run -i -d --rm --net=host --privileged -v /dev/shm:/dev/shm -v $(pwd)/allure-results:/tests/allure-results -v $(pwd)/e2e/artifacts:/tests/e2e/artifacts -e suite=suite2 -e maxinstances=$maxinstances -e logLevel=$logLevel --name e2e $DOCKER_USERNAME/e2e-chrome:latest
    - docker exec -it e2e bash -c 'xvfb-run -a node conf-flake.js || if [$? != 0]; then exit 0; fi'

addons:
  artifacts:
    s3_region: "us-west-2"
    paths:
    - ./allure-results
    - ./artifacts
    target_paths: $TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER/results
notifications:
  slack: murcraft:4KfWGJMBr6kv3gR1iND1pVaO
  email:
    recipients:
    - ogulikpurse@gmail.com
    on_success: always
    on_failure: always
